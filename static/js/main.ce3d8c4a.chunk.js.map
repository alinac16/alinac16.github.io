{"version":3,"sources":["components/SocialIcons/SocialIcons.jsx","components/Hero/Hero.jsx","components/Nav/Nav.jsx","pages/LandingPage/LandingPage.jsx","components/Tabs/Tab.jsx","pages/AboutPage/AboutPage.jsx","components/Tabs/Tabs.jsx","components/ProjectItems/ProjectItems.jsx","pages/ProjectsPage/projects.js","pages/ProjectsPage/ProjectsPage.jsx","components/ThemeControl/themes.js","components/ThemeControl/ThemeControl.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["SocialIcons","props","context","colorPrimary","theme","className","href","style","color","icon","contextTypes","PropTypes","any","Hero","class","Nav","offset","triggerElement","classToggle","data-scroll","duration","switchTheme","func","LandingPage","Tab","onClick","label","this","activeTab","Component","AboutPage","id","src","target","tech","iconURL","map","skill","index","key","fontSize","alt","ProjectItems","project","title","description","img","stack","liveLink","github","tool","projects","ProjectsPage","themes","name","firstTime","colorAlternate","colorHighlight","textPrimary","navAlpha","getThemes","bgPrimary","bgAlternate","bgLanding","textAlternate","textLanding","parallaxStars","ThemeSwitcher","getRandomTheme","currentTheme","state","themesWithoutCurrentTheme","filter","Math","floor","random","length","randomTheme","setState","firstTimeThemes","bind","children","jsx","childContextTypes","library","add","fab","faCheckSquare","App","ThemeControl","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce3d8c4a.chunk.js","sourcesContent":["import React from 'react';\nimport './SocialIcons.scss';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SocialIcons = (props, context) => {\n  const {\n    theme: { colorPrimary },\n  } = context;\n  return (\n    <div className='social-icons animate-icons'>\n      <a href='https://github.com/checksonhk'>\n        <FontAwesomeIcon className='icons-social' style={{ color: colorPrimary }} icon={['fab', 'github']} />\n      </a>\n      <a href='https://stackoverflow.com/story/checksonhk'>\n        <FontAwesomeIcon className='icons-social' style={{ color: colorPrimary }} icon={['fab', 'stack-overflow']} />\n      </a>\n      <a href='https://www.linkedin.com/in/jackson-to-605686181/'>\n        <FontAwesomeIcon className='icons-social' style={{ color: colorPrimary }} icon={['fab', 'linkedin']} />\n      </a>\n    </div>\n  );\n};\n\nSocialIcons.contextTypes = {\n  theme: PropTypes.any,\n};\n\nexport default SocialIcons;\n","import React from \"react\";\n\nimport \"./styles.scss\";\n\nfunction Hero(props) {\n  return (\n    <div class=\"hero\">\n      <div class=\"hero__text\">\n        <h2>DATA-DRIVEN RESEARCHER</h2>\n        <h1>Alina</h1>\n        <h1 className=\"lastName\">Chalanuchpong</h1>\n      </div>\n      <div class=\"hero-overlay\"></div>\n    </div>\n  );\n}\n\nexport default Hero;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Controller, Scene } from \"react-scrollmagic\";\n\nimport \"./styles.scss\";\n\nfunction Nav(props) {\n  return (\n    <>\n      {/* <ul class=\"burger-menu\">\n        <div class=\"nav-burger\">\n          <div class=\"burger\"></div>\n        </div>\n        <a href=\"#\">\n          <span>有南</span>\n        </a>\n        <a href=\"#about\">\n          <span>About</span>\n        </a>\n        <a href=\"#portfolio\">\n          <span>Portfolio</span>\n        </a>\n        <a href=\"#contact\">\n          <span>Contact</span>\n        </a>\n      </ul> */}\n      <Controller>\n        <Scene offset=\"-50%\" triggerElement=\"#about\" classToggle=\"nav--dk\">\n          <nav>\n            <div class=\"nav-top\">\n              <a data-scroll href=\"#\">\n                <span>私</span>\n              </a>\n            </div>\n            <ul class=\"nav-bottom\">\n              <Controller>\n                <Scene\n                  duration={\"100%\"}\n                  triggerElement=\"#about\"\n                  classToggle=\"item--selected\"\n                >\n                  <li class=\"nav-bottom__item nav-about\">\n                    <a data-scroll href=\"#about\">\n                      <span>About</span>\n                    </a>\n                  </li>\n                </Scene>\n                <Scene triggerElement=\"#projects\" classToggle=\"item--selected\">\n                  <li class=\"nav-bottom__item nav-portfolio\">\n                    <a data-scroll href=\"#projects\">\n                      <span>Projects</span>\n                    </a>\n                  </li>\n                </Scene>\n                <li class=\"nav-bottom__item nav-contact\">\n                  <a data-scroll href=\"#about\">\n                    <span>Contact</span>\n                  </a>\n                </li>\n              </Controller>\n            </ul>\n          </nav>\n        </Scene>\n      </Controller>\n    </>\n  );\n}\n\nNav.contextTypes = {\n  theme: PropTypes.any,\n  switchTheme: PropTypes.func,\n};\n\nexport default Nav;\n","import React from 'react';\nimport SocialIcons from '../../components/SocialIcons/SocialIcons';\nimport Hero from '../../components/Hero/Hero';\nimport Nav from '../../components/Nav/Nav';\nimport './styles.scss';\nimport PropTypes from 'prop-types';\n\nconst LandingPage = (props, context) => {\n  return (\n    <header>\n      <Nav />\n      <Hero />\n    </header>\n  );\n};\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label },\n    } = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Tabs from \"../../components/Tabs/Tabs\";\nimport \"./styles.scss\";\n\nconst AboutPage = props => {\n  const techStack = [\n    // commented out, have no icons from fa-\n    { tech: \"R\", icon: \"r-project\" },\n    {\n      tech: \"Tableau\",\n      iconURL: `https://img.icons8.com/ios/50/000000/tableau-software.png`,\n    },\n    { tech: \"Python\", icon: \"python\" },\n    {\n      tech: \"PostGreSQL\",\n      iconURL: `https://img.icons8.com/material/56/postgreesql.png`,\n    },\n    { tech: \"JavaScript (ES6+)\", icon: \"js\" },\n    { tech: \"React\", icon: \"react\" },\n    { tech: \"HTML & (S)CSS\", icon: \"html5\" },\n    {\n      tech: \"FlowJo\",\n      iconURL: `https://img.icons8.com/ios-filled/50/000000/prism.png`,\n    },\n  ];\n\n  return (\n    <section id=\"about\" className=\"about-page\">\n      <div className=\"about-container\">\n        <div className=\"about-meta\">\n          <img className=\"about-image\" src=\"/imgs/aboutsq.jpg\"></img>\n          <div className=\"about-contact-wrapper\">\n            <div className=\"about-desc\">\n              <h2 className=\"greeting-title\">Hello,</h2>\n              <br />\n              <h2> </h2>\n              I am a curious researcher dedicated to contributing to the\n              innovation of healthcare through technology. Connect with me!\n              <br />\n              <br />I enjoy working with people and learning from experts in a\n              variety of domains. Ready to tackle challenging problems, I hope\n              to work towards helping patients and their family gain better\n              access to healthcare.\n            </div>\n            <div id=\"contact\" class=\"about-contact\">\n              <a href=\"https://github.com/alinac16\" target=\"_blank\">\n                <i class=\"fab fa-github\"></i>\n              </a>\n              <a\n                href=\"https://www.linkedin.com/in/alina-chalanuchpong/\"\n                target=\"_blank\"\n              >\n                <i class=\"fab fa-linkedin-in\"></i>\n              </a>\n              <a href=\"mailto:alina.c@alumni.ubc.ca\" target=\"_blank\">\n                <i class=\"fas fa-envelope\"></i>\n              </a>\n              {/* <a href=\"http://jacksonto.me/Jackson_s_CV.pdf\" target=\"_blank\">\n                <i class=\"fas fa-file-alt\"></i>\n              </a> */}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className=\"about-skills-background\"> */}\n      <div className=\"about-skills\">\n        <h2 className=\"about-skills-text\">Technologies</h2>\n        <ul className=\"about-tech-stack\">\n          {techStack.map((skill, index) => {\n            return (\n              <li key={index}>\n                {typeof skill.icon === \"string\" ? (\n                  <FontAwesomeIcon\n                    style={{ fontSize: \"3rem\" }}\n                    icon={[\"fab\", skill.icon]}\n                  />\n                ) : (\n                  <img alt={skill.tech} src={skill.iconURL}></img>\n                )}\n                <span className=\"about-tech-stack__text\">{skill.tech}</span>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      {/* </div> */}\n    </section>\n  );\n};\n\nexport default AboutPage;\n","import React, { Component } from 'react';\n\nimport Tab from './Tab';\n\nclass Tabs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab },\n    } = this;\n\n    return (\n      <div className='tabs'>\n        <ol className='tab-list'>\n          {children.map(child => {\n            const { label } = child.props;\n\n            return <Tab activeTab={activeTab} key={label} label={label} onClick={onClickTabItem} />;\n          })}\n        </ol>\n        <div className='tab-content'>\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nfunction ProjectItems({ project }) {\n  const { title, description, img, stack, liveLink, github } = project;\n  return (\n    <div class=\"project\">\n      <figure class=\"project-preview\">\n        <a href={liveLink}>\n          <img src={img} alt=\"\" />\n        </a>\n      </figure>\n      <figcaption class=\"project-content\">\n        <h3>{title}</h3>\n        <p>{description}</p>\n        <ul class=\"project-content__skills\">\n          {stack.map(tool => (\n            <li>{tool}</li>\n          ))}\n        </ul>\n        <div class=\"project-content__buttons\">\n          {liveLink && (\n            <button class=\"btn btn--transparent btn--dk\">\n              <a data-scroll href={liveLink} target=\"_blank\">\n                View Live\n              </a>\n            </button>\n          )}\n          {github && (\n            <button class=\"btn btn--transparent btn--dk\">\n              <a data-scroll href={github} target=\"_blank\">\n                Github\n              </a>\n            </button>\n          )}\n        </div>\n      </figcaption>\n    </div>\n  );\n}\n\nexport default ProjectItems;\n","const projects = [\n  {\n    title: \"Crosswalk optimizer\",\n    description:\n      \"Interactive web application designed for city engineers in the City of Surrey to predict optimal crosswalk locations to enhance road safety and create equity.\",\n    img: \"imgs/surreycrosswalk_project.png\",\n    stack: [\"R\", \"Python\"],\n    liveLink: \"https://alinac20.shinyapps.io/SurreyCrosswalk/\",\n    github: \"https://github.com/alinac16/surrey_crosswalk\",\n  },\n  {\n    title: \"TB Dashboard\",\n    description:\n      \"Interactive dashboard to explore the Tuberculosis cases around the world.\",\n    img: \"imgs/tableau_project.png\",\n    stack: [\"Tableau\"],\n    liveLink:\n      \"https://public.tableau.com/profile/alinac16#!/vizhome/TB_20200928/Dashboard1\",\n  },\n];\n\nexport default projects;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProjectItems from \"../../components/ProjectItems/ProjectItems\";\nimport projects from \"./projects\";\n\nimport \"./styles.scss\";\n\nconst ProjectsPage = (props, context) => {\n  return (\n    <section id=\"projects\" className=\"project-page\">\n      <div className=\"project-container\">\n        <h2 className=\"section-title\">Projects</h2>\n        {projects.map(project => (\n          <ProjectItems project={project} />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default ProjectsPage;\n","const themes = [\n  {\n    name: 'blue',\n    firstTime: true,\n    colorPrimary: '#4ea9da',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#daedf7',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)',\n  },\n];\nexport const getThemes = () => {\n  return themes.map(theme => {\n    return {\n      name: theme.name,\n      firstTime: theme.firstTime,\n      colorPrimary: theme.colorPrimary,\n      colorAlternate: theme.colorAlternate,\n      colorHighlight: theme.colorHighlight,\n      bgPrimary: theme.colorAlternate,\n      bgAlternate: theme.colorPrimary,\n      bgLanding: theme.colorPrimary,\n      textPrimary: theme.textPrimary,\n      textAlternate: theme.colorAlternate,\n      textLanding: theme.colorPrimary,\n      parallaxStars: theme.colorPrimary,\n      navAlpha: theme.navAlpha,\n    };\n  });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getThemes } from './themes';\n\nclass ThemeSwitcher extends Component {\n  constructor(props) {\n    super(props);\n    const allThemes = getThemes();\n    const firstTimeThemes = allThemes.filter(theme => theme.firstTime === true);\n\n    this.state = {\n      theme: firstTimeThemes[Math.floor(Math.random() * firstTimeThemes.length)],\n    };\n\n    this.switchTheme = this.switchTheme.bind(this);\n  }\n\n  getChildContext() {\n    return {\n      theme: this.state.theme,\n      switchTheme: this.switchTheme,\n    };\n  }\n\n  getRandomTheme = () => {\n    const currentTheme = this.state.theme;\n    const allThemes = getThemes();\n    const themesWithoutCurrentTheme = allThemes.filter(theme => theme.name !== currentTheme.name);\n    const randomThemeIndex = Math.floor(Math.random() * themesWithoutCurrentTheme.length);\n    return themesWithoutCurrentTheme[randomThemeIndex];\n  };\n\n  switchTheme = () => {\n    const randomTheme = this.getRandomTheme();\n    this.setState({\n      theme: randomTheme,\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    const theme = this.state.theme;\n\n    return (\n      <div className='theme-switcher'>\n        <style jsx='true'>\n          {`\n            body {\n              background-color: ${theme.bgPrimary};\n              body,\n              h1,\n              h2,\n              h3,\n              h4,\n              h5,\n              h6,\n              p,\n              ol,\n              ul {\n                color: ${theme.textPrimary};\n              }\n            }\n          `}\n        </style>\n        {children}\n      </div>\n    );\n  }\n}\n\nThemeSwitcher.propTypes = {\n  children: PropTypes.node,\n};\n\nThemeSwitcher.childContextTypes = {\n  theme: PropTypes.any,\n  switchTheme: PropTypes.func,\n};\n\nexport default ThemeSwitcher;\n","import React, { Component } from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport LandingPage from \"./pages/LandingPage/LandingPage\";\nimport AboutPage from \"./pages/AboutPage/AboutPage\";\nimport ProjectsPage from \"./pages/ProjectsPage/ProjectsPage\";\n// import TimelinePage from \"./pages/TimelinePage/TimelinePage\";\n// import Footer from \"./components/Footer/Footer\";\nimport ThemeControl from \"./components/ThemeControl/ThemeControl\";\nimport \"fontsource-roboto\";\nimport \"./base.scss\";\n\nlibrary.add(fab, faCheckSquare);\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"page-wrapper\">\n        <ThemeControl>\n          <LandingPage />\n          <AboutPage />\n          <ProjectsPage />\n          {/* <TimelinePage /> */}\n          {/* <Footer /> */}\n        </ThemeControl>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.scss';\nimport '@fortawesome/react-fontawesome';\nimport '@fortawesome/free-brands-svg-icons';\nimport 'typeface-roboto';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}